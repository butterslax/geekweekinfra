{
  "Resources": {
    "GWNodeVPCBE9CBA6D": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/Resource"
      }
    },
    "GWNodeVPCelbpublicSubnet1Subnet14D8B1CC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "elb_public_"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1/Subnet"
      }
    },
    "GWNodeVPCelbpublicSubnet1RouteTable961033DF": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1/RouteTable"
      }
    },
    "GWNodeVPCelbpublicSubnet1RouteTableAssociation2CEFB3C0": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCelbpublicSubnet1RouteTable961033DF"
        },
        "SubnetId": {
          "Ref": "GWNodeVPCelbpublicSubnet1Subnet14D8B1CC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1/RouteTableAssociation"
      }
    },
    "GWNodeVPCelbpublicSubnet1DefaultRoute1A482B83": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCelbpublicSubnet1RouteTable961033DF"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "GWNodeVPCIGW45DA90AE"
        }
      },
      "DependsOn": [
        "GWNodeVPCVPCGW28C8E25D"
      ],
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1/DefaultRoute"
      }
    },
    "GWNodeVPCelbpublicSubnet1EIPB09D2189": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1/EIP"
      }
    },
    "GWNodeVPCelbpublicSubnet1NATGateway23FDEDDF": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "GWNodeVPCelbpublicSubnet1Subnet14D8B1CC"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "GWNodeVPCelbpublicSubnet1EIPB09D2189",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet1/NATGateway"
      }
    },
    "GWNodeVPCelbpublicSubnet2SubnetC1A6616D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "elb_public_"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2/Subnet"
      }
    },
    "GWNodeVPCelbpublicSubnet2RouteTableD26B8C81": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2/RouteTable"
      }
    },
    "GWNodeVPCelbpublicSubnet2RouteTableAssociationC8464E10": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCelbpublicSubnet2RouteTableD26B8C81"
        },
        "SubnetId": {
          "Ref": "GWNodeVPCelbpublicSubnet2SubnetC1A6616D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2/RouteTableAssociation"
      }
    },
    "GWNodeVPCelbpublicSubnet2DefaultRoute80CBFDFE": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCelbpublicSubnet2RouteTableD26B8C81"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "GWNodeVPCIGW45DA90AE"
        }
      },
      "DependsOn": [
        "GWNodeVPCVPCGW28C8E25D"
      ],
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2/DefaultRoute"
      }
    },
    "GWNodeVPCelbpublicSubnet2EIP640D8423": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2/EIP"
      }
    },
    "GWNodeVPCelbpublicSubnet2NATGatewayCD7935FD": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "GWNodeVPCelbpublicSubnet2SubnetC1A6616D"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "GWNodeVPCelbpublicSubnet2EIP640D8423",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/elb_public_Subnet2/NATGateway"
      }
    },
    "GWNodeVPCecsprivateSubnet1Subnet4E018615": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ecs_private_"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet1/Subnet"
      }
    },
    "GWNodeVPCecsprivateSubnet1RouteTable375E6FB9": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet1/RouteTable"
      }
    },
    "GWNodeVPCecsprivateSubnet1RouteTableAssociationE7259EA2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCecsprivateSubnet1RouteTable375E6FB9"
        },
        "SubnetId": {
          "Ref": "GWNodeVPCecsprivateSubnet1Subnet4E018615"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet1/RouteTableAssociation"
      }
    },
    "GWNodeVPCecsprivateSubnet1DefaultRouteBEDC737E": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCecsprivateSubnet1RouteTable375E6FB9"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "GWNodeVPCelbpublicSubnet1NATGateway23FDEDDF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet1/DefaultRoute"
      }
    },
    "GWNodeVPCecsprivateSubnet2Subnet5A58DDD6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "ecs_private_"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet2/Subnet"
      }
    },
    "GWNodeVPCecsprivateSubnet2RouteTable6758AD39": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet2/RouteTable"
      }
    },
    "GWNodeVPCecsprivateSubnet2RouteTableAssociation51C47185": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCecsprivateSubnet2RouteTable6758AD39"
        },
        "SubnetId": {
          "Ref": "GWNodeVPCecsprivateSubnet2Subnet5A58DDD6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet2/RouteTableAssociation"
      }
    },
    "GWNodeVPCecsprivateSubnet2DefaultRoute724EB42D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCecsprivateSubnet2RouteTable6758AD39"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "GWNodeVPCelbpublicSubnet2NATGatewayCD7935FD"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/ecs_private_Subnet2/DefaultRoute"
      }
    },
    "GWNodeVPCauroraisolatedSubnet1Subnet40EE0CCA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "aurora_isolated_"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet1/Subnet"
      }
    },
    "GWNodeVPCauroraisolatedSubnet1RouteTable298344ED": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet1/RouteTable"
      }
    },
    "GWNodeVPCauroraisolatedSubnet1RouteTableAssociation44238F2C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCauroraisolatedSubnet1RouteTable298344ED"
        },
        "SubnetId": {
          "Ref": "GWNodeVPCauroraisolatedSubnet1Subnet40EE0CCA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet1/RouteTableAssociation"
      }
    },
    "GWNodeVPCauroraisolatedSubnet2SubnetF3503987": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "aurora_isolated_"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet2/Subnet"
      }
    },
    "GWNodeVPCauroraisolatedSubnet2RouteTable0B9BC677": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet2/RouteTable"
      }
    },
    "GWNodeVPCauroraisolatedSubnet2RouteTableAssociation1A3205D4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "GWNodeVPCauroraisolatedSubnet2RouteTable0B9BC677"
        },
        "SubnetId": {
          "Ref": "GWNodeVPCauroraisolatedSubnet2SubnetF3503987"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/aurora_isolated_Subnet2/RouteTableAssociation"
      }
    },
    "GWNodeVPCIGW45DA90AE": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "GeekweekinfraStack/GWNodeVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/IGW"
      }
    },
    "GWNodeVPCVPCGW28C8E25D": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        },
        "InternetGatewayId": {
          "Ref": "GWNodeVPCIGW45DA90AE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/GWNodeVPC/VPCGW"
      }
    },
    "AuroraSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group to access Aurora",
        "SubnetIds": [
          {
            "Ref": "GWNodeVPCauroraisolatedSubnet1Subnet40EE0CCA"
          },
          {
            "Ref": "GWNodeVPCauroraisolatedSubnet2SubnetF3503987"
          }
        ],
        "DBSubnetGroupName": "aurora-serverless-subnet-group"
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/AuroraSubnetGroup"
      }
    },
    "DBCredentialsSecretAFB45EA2": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "IncludeSpace": false,
          "SecretStringTemplate": "{\"username\":\"geekweek\"}"
        },
        "Name": "geekweek-node-dev-credentials"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/DBCredentialsSecret/Resource"
      }
    },
    "DBCredentialsArn15122902": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "DBCredentialsSecretAFB45EA2"
        },
        "Name": "geekweek-node-dev-credentials-arn"
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/DBCredentialsArn/Resource"
      }
    },
    "DBClusterSecurityGroup74DEDB47": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "GeekweekinfraStack/DBClusterSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.0.0/16",
            "Description": "from 10.0.0.0/16:5432",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432
          }
        ],
        "VpcId": {
          "Ref": "GWNodeVPCBE9CBA6D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/DBClusterSecurityGroup/Resource"
      }
    },
    "DBCluster": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "Engine": "aurora-postgresql",
        "DatabaseName": "bugbounty",
        "DBClusterIdentifier": "geekweek-node-dev-cluster",
        "DBSubnetGroupName": "aurora-serverless-subnet-group",
        "EngineMode": "serverless",
        "EngineVersion": "10.7",
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DBCredentialsSecretAFB45EA2"
              },
              ":SecretString:username::}}"
            ]
          ]
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DBCredentialsSecretAFB45EA2"
              },
              ":SecretString:password::}}"
            ]
          ]
        },
        "ScalingConfiguration": {
          "AutoPause": true,
          "MaxCapacity": 2,
          "MinCapacity": 2,
          "SecondsUntilAutoPause": 3600
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "DBClusterSecurityGroup74DEDB47",
              "GroupId"
            ]
          }
        ]
      },
      "DependsOn": [
        "AuroraSubnetGroup"
      ],
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/DBCluster"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/01QQW7CMBB8S++OW1CrniFUiEsVJRXXynG2dCG20XoNQlH+XjuhCaedHY/H41nKxZt8eVJXn+nmlLVYy65ipU8iUt8d6KXs9mct8h+7L3JRhLpFXYXaAiduRqULDF+qbmHmZ27lvdOoGJ2dxAl87Io0PhVvFcNV3URBeIlwNt5ZBor4XzAmuW8rjll/DVgWFehAyLctuXAeMjwSvaDGyy7Sm/XoPek267wNPj7SCw+agL1RVh2AYhPDfjeLKCq8SQUR2kOhSBmI99L5tPS9KMG7QHr44CPOnW0wVdAL6xqQR/98WbzL19j/0SNmFCyjAVmO8w/RQcjlmwEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "GeekweekinfraStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}